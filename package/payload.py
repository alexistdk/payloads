import time
from datetime import datetime


def movie(
        platform_code=None,
        id_contenido=None,
        title=None,
        original_title=None,
        clean_title=None,
        year=None,
        duration=None,
        deeplink_web=None,
        deeplink_android=None,
        deeplink_ios=None,
        synopsis=None,
        playback=None,
        images=None,
        rating=None,
        provider=None,
        genres=None,
        cast=None,
        directors=None,
        availability=None,
        download=None,
        is_original=None,
        is_branded=None,
        is_adult=None,
        packages=None,
        country=None
):
    payload = {
        'PlatformCode': platform_code,
        'Id': id_contenido,
        'Title': title,
        'OriginalTitle': original_title,
        'CleanTitle': clean_title,
        'Type': 'movie',
        'Year': year,
        'Duration': duration,
        'Deeplinks': {
            'Web': deeplink_web,
            'Android': deeplink_android,
            'iOS': deeplink_ios,
        },
        'Playback': playback,
        'Synopsis': synopsis,
        'Images': images,
        'Rating': rating,
        'Provider': provider,
        'Genres': genres,
        'Cast': cast,
        'Directors': directors,
        'Availability': availability,
        'Download': download,
        'IsOriginal': is_original,
        'IsBranded': is_branded,
        'IsAdult': is_adult,
        'Packages': packages,
        'Country': country,
        'Timestamp': datetime.now().isoformat(),
        'CreatedAt': time.strftime("%Y-%m-%d")
    }
    return payload


def serie(
        platform_code=None,
        id_contenido=None,
        title=None,
        original_title=None,
        clean_title=None,
        year=None,
        duration=None,
        deeplink_web=None,
        deeplink_android=None,
        deeplink_ios=None,
        seasons=None,
        synopsis=None,
        playback=None,
        images=None,
        rating=None,
        provider=None,
        genres=None,
        cast=None,
        directors=None,
        availability=None,
        download=None,
        is_original=None,
        is_branded=None,
        is_adult=None,
        packages=None,
        country=None
):
    payload = {
        'PlatformCode': platform_code,
        'Id': id_contenido,
        'Title': title,
        'OriginalTitle': original_title,
        'CleanTitle': clean_title,
        'Type': 'serie',
        'Year': year,
        'Duration': duration,
        'Deeplinks': {
            'Web': deeplink_web,
            'Android': deeplink_android,
            'iOS': deeplink_ios,
        },
        'Seasons': seasons,
        'Playback': playback,
        'Synopsis': synopsis,
        'Images': images,
        'Rating': rating,
        'Provider': provider,
        'Genres': genres,
        'Cast': cast,
        'Directors': directors,
        'Availability': availability,
        'Download': download,
        'IsOriginal': is_original,
        'IsBranded': is_branded,
        'IsAdult': is_adult,
        'Packages': packages,
        'Country': country,
        'Timestamp': datetime.now().isoformat(),
        'CreatedAt': time.strftime("%Y-%m-%d")
    }
    return payload


def season(
        id_contenido=None,
        synopsis=None,
        title=None,
        deeplink_web=None,
        number=None,
        year=None,
        directors=None,
        cast=None,
):
    payload = {
        'Id': id_contenido,
        'Number': number,
        'Title': title,
        'Year': year,
        'Deeplink': deeplink_web,
        'Synopsis': synopsis,
        'Cast': cast,
        'Directors': directors,
    }
    return payload


def episode(
        platform_code=None,
        parent_id=None,
        parent_title=None,
        id_contenido=None,
        title=None,
        episode=None,
        season=None,
        year=None,
        duration=None,
        deeplink_web=None,
        deeplink_android=None,
        deeplink_ios=None,
        synopsis=None,
        rating=None,
        provider=None,
        genres=None,
        cast=None,
        directors=None,
        availability=None,
        download=None,
        is_original=None,
        is_branded=None,
        is_adult=None,
        packages=None,
        country=None
):
    payload = {
        'PlatformCode': platform_code,
        'ParentId': parent_id,
        'ParentTitle': parent_title,
        'Id': id_contenido,
        'Title': title,
        'Episode': episode,
        'Season': season,
        'Year': year,
        'Duration': duration,
        'Deeplinks': {
            'Web': deeplink_web,
            'Android': deeplink_android,
            'iOS': deeplink_ios
        },
        'Synopsis': synopsis,
        'Rating': rating,
        'Provider': provider,
        'Genres': genres,
        'Cast': cast,
        'Directors': directors,
        'Availability': availability,
        'Download': download,
        'IsOriginal': is_original,
        'IsBranded': is_branded,
        'IsAdult': is_adult,
        'Country': country,
        'Packages': packages,
        'Timestamp': datetime.now().isoformat(),
        'CreatedAt': time.strftime("%Y-%m-%d")
    }
    return payload
